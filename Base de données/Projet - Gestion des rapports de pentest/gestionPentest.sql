CREATE TABLE `client` (
  `id` integer NOT NULL AUTO_INCREMENT,
  `nom` varchar(64) NOT NULL,
  `prenom` varchar(64) NOT NULL,
  `email` varchar(128) NOT NULL,
  `telephone` integer(32) NOT NULL,
  `entreprise_id` integer NOT NULL COMMENT 'Référence à l\'entreprise.',
  PRIMARY KEY (`id`, `entreprise_id`)
);

CREATE TABLE `entreprise` (
  `id` integer PRIMARY KEY NOT NULL AUTO_INCREMENT,
  `nom` varchar(64) NOT NULL,
  `adresse` varchar(128) NOT NULL,
  `code_postal` integer(16) NOT NULL,
  `ville` varchar(64) NOT NULL,
  `siret` varchar(32) NOT NULL,
  `site_internet` varchar(128) NOT NULL
);

CREATE TABLE `pentestEntreprise` (
  `pentest_id` integer NOT NULL COMMENT 'Référence au pentest.',
  `entreprise_id` integer NOT NULL COMMENT 'Référence à l\'entreprise.',
  PRIMARY KEY (`pentest_id`, `entreprise_id`)
);

CREATE TABLE `pentest` (
  `id` integer NOT NULL AUTO_INCREMENT,
  `status` varchar(32) NOT NULL DEFAULT "En cours." COMMENT 'Permet de définir le niveau de finalisation du pentest.',
  `date` date DEFAULT (CURDATE()) COMMENT 'Donne la date du pentest.',
  `lieu` varchar(128) NOT NULL,
  `pentestTest_id` integer NOT NULL COMMENT 'Référence aux tests du pentest.',
  `commentaire` text DEFAULT null COMMENT 'Permet de marquer les problèmes rencontrés.',
  `pentestVulnerabilite_id` integer NOT NULL COMMENT 'Référence aux outils utilisés pour le pentest.',
  `pentestReunion_id` integer NOT NULL COMMENT 'Référence aux réunions organisées pour le pentest.',
  PRIMARY KEY (`id`, `pentestTest_id`, `pentestVulnerabilite_id`, `pentestReunion_id`)
);

CREATE TABLE `pentestPersonnel` (
  `pentest_id` integer NOT NULL COMMENT 'Référence au pentest.',
  `personnel_id` integer NOT NULL COMMENT 'Référence au personnel.',
  PRIMARY KEY (`pentest_id`, `personnel_id`)
);

CREATE TABLE `personnel` (
  `id` integer PRIMARY KEY NOT NULL AUTO_INCREMENT,
  `nom` varchar(64) NOT NULL,
  `prenom` varchar(64) NOT NULL,
  `email` varchar(128) NOT NULL,
  `telephone` integer(32) NOT NULL,
  `poste` varchar(64) NOT NULL,
  `specialite` varchar(64) NOT NULL
);

CREATE TABLE `pentestTest` (
  `id` integer NOT NULL COMMENT 'Référence du pentest.',
  `type_id` integer NOT NULL COMMENT 'Référence du type.',
  `date` date DEFAULT (CURDATE()) COMMENT 'Donne la date du test réalisé.',
  `condition_realisation` text DEFAULT null COMMENT 'Permet de marquer les avantages ou désavantages obtenus.',
  PRIMARY KEY (`id`, `type_id`)
);

CREATE TABLE `type` (
  `id` integer PRIMARY KEY NOT NULL AUTO_INCREMENT,
  `niveau` varchar(64) NOT NULL COMMENT 'Permet de définir si c\'est en boîte noire, grise ou blanche.'
);

CREATE TABLE `pentestVulnerabilite` (
  `pentest_id` integer NOT NULL COMMENT 'Référence du pentest.',
  `vulnerabilite_id` integer NOT NULL COMMENT 'Référence de la vulnérabilité.',
  `document_id` integer DEFAULT null COMMENT 'Référence du compte-rendu',
  `date` date DEFAULT (CURDATE()) COMMENT 'Donne la date de la vulnérabilité trouvée.',
  `status` varchar(32) NOT NULL COMMENT 'Est-ce que la vulnérabilité est patchée ou pas.',
  `commentaire` text DEFAULT null COMMENT 'Permet de noter la méthode.',
  PRIMARY KEY (`pentest_id`, `vulnerabilite_id`)
);

CREATE TABLE `vulnerabilite` (
  `id` integer NOT NULL AUTO_INCREMENT,
  `nom` varchar(255) NOT NULL COMMENT 'Le nom de la vulnérabilité.',
  `cve` varchar(32) NOT NULL COMMENT 'La CVE attribuée à la vulnérabilité pour tracer.',
  `description` text DEFAULT null COMMENT 'Explication de la vulnérabilité.',
  `outil_id` integer NOT NULL COMMENT 'Référence l\'outil utilisé.',
  PRIMARY KEY (`id`, `outil_id`)
);

CREATE TABLE `outil` (
  `id` integer PRIMARY KEY NOT NULL AUTO_INCREMENT,
  `nom` varchar(128) NOT NULL COMMENT 'Le nom de l\'outil utilisé.'
);

CREATE TABLE `pentestReunion` (
  `pentest_id` integer NOT NULL COMMENT 'Référence au pentest.',
  `reunion_id` integer NOT NULL COMMENT 'Référence aux réunions.',
  PRIMARY KEY (`reunion_id`, `pentest_id`)
);

CREATE TABLE `reunion` (
  `id` integer PRIMARY KEY NOT NULL AUTO_INCREMENT,
  `date` date DEFAULT (CURDATE()) COMMENT 'Donne la date de la réunion.',
  `commentaire` text DEFAULT null COMMENT 'Permet de noter certains points.',
  `recommandation` text DEFAULT null COMMENT 'Permet de noter les recommandations effectuées.',
  `documentReunion_id` integer NOT NULL COMMENT 'Permet de tracer l\'ensemble des documents à une réunion.'
);

CREATE TABLE `reunionDocument` (
  `document_id` integer NOT NULL COMMENT 'Référence du document.',
  `reunion_id` integer NOT NULL COMMENT 'Référence de la réunion.',
  PRIMARY KEY (`document_id`, `reunion_id`)
);

CREATE TABLE `document` (
  `id` integer NOT NULL AUTO_INCREMENT,
  `vulnerabilite_id` integer NOT NULL COMMENT 'Référence à la vulnérabilité.',
  `compte_rendu` varchar(255) NOT NULL COMMENT 'Le lien du document.',
  PRIMARY KEY (`id`, `vulnerabilite_id`)
);

ALTER TABLE `client` COMMENT = 'Contient l\'ensemble des clients.';

ALTER TABLE `entreprise` COMMENT = 'Permet de référencer chaque entreprise.';

ALTER TABLE `pentestEntreprise` COMMENT = 'Permet de faire la jonction entre l\'entreprise et le pentest.';

ALTER TABLE `pentest` COMMENT = 'Permet de faire la liaison entre toutes les informations pour un pentest.';

ALTER TABLE `pentestPersonnel` COMMENT = 'Permet de faire la jonction entre le personnel et le pentest.';

ALTER TABLE `personnel` COMMENT = 'Permet de référencer chaque personnel.';

ALTER TABLE `pentestTest` COMMENT = 'Permet de faire la jonction entre les tests et le pentest.';

ALTER TABLE `pentestVulnerabilite` COMMENT = 'Permet de faire la jonction entre les vulnébarilités et le pentest.';

ALTER TABLE `vulnerabilite` COMMENT = 'Permet de référencer chaque vulnérabilité.';

ALTER TABLE `outil` COMMENT = 'Permet de référencer chaque outil.';

ALTER TABLE `pentestReunion` COMMENT = 'Permet de faire la jonction entre les réunions et le pentest.';

ALTER TABLE `reunion` COMMENT = 'Permet de référencer chaque réunion effectuée.';

ALTER TABLE `reunionDocument` COMMENT = 'Permet de faire la jonction entre les documents et la réunion.';

ALTER TABLE `document` COMMENT = 'Permet de référencer chaque document.';

ALTER TABLE `client` ADD FOREIGN KEY (`entreprise_id`) REFERENCES `entreprise` (`id`);

CREATE TABLE `pentestEntreprise_pentest` (
  `pentestEntreprise_pentest_id` integer,
  `pentest_id` integer,
  PRIMARY KEY (`pentestEntreprise_pentest_id`, `pentest_id`)
);

ALTER TABLE `pentestEntreprise_pentest` ADD FOREIGN KEY (`pentestEntreprise_pentest_id`) REFERENCES `pentestEntreprise` (`pentest_id`);

ALTER TABLE `pentestEntreprise_pentest` ADD FOREIGN KEY (`pentest_id`) REFERENCES `pentest` (`id`);


CREATE TABLE `pentestEntreprise_entreprise` (
  `pentestEntreprise_entreprise_id` integer,
  `entreprise_id` integer,
  PRIMARY KEY (`pentestEntreprise_entreprise_id`, `entreprise_id`)
);

ALTER TABLE `pentestEntreprise_entreprise` ADD FOREIGN KEY (`pentestEntreprise_entreprise_id`) REFERENCES `pentestEntreprise` (`entreprise_id`);

ALTER TABLE `pentestEntreprise_entreprise` ADD FOREIGN KEY (`entreprise_id`) REFERENCES `entreprise` (`id`);


ALTER TABLE `pentestTest` ADD FOREIGN KEY (`id`) REFERENCES `pentest` (`pentestTest_id`);

ALTER TABLE `pentestReunion` ADD FOREIGN KEY (`pentest_id`) REFERENCES `pentest` (`pentestReunion_id`);

ALTER TABLE `pentestPersonnel` ADD FOREIGN KEY (`personnel_id`) REFERENCES `personnel` (`id`);

ALTER TABLE `pentest` ADD FOREIGN KEY (`id`) REFERENCES `pentestPersonnel` (`pentest_id`);

ALTER TABLE `type` ADD FOREIGN KEY (`id`) REFERENCES `pentestTest` (`type_id`);

ALTER TABLE `reunion` ADD FOREIGN KEY (`id`) REFERENCES `pentestReunion` (`reunion_id`);

ALTER TABLE `vulnerabilite` ADD FOREIGN KEY (`id`) REFERENCES `pentestVulnerabilite` (`vulnerabilite_id`);

ALTER TABLE `pentest` ADD FOREIGN KEY (`pentestVulnerabilite_id`) REFERENCES `pentestVulnerabilite` (`pentest_id`);

ALTER TABLE `vulnerabilite` ADD FOREIGN KEY (`outil_id`) REFERENCES `outil` (`id`);

ALTER TABLE `document` ADD FOREIGN KEY (`id`) REFERENCES `reunionDocument` (`document_id`);

ALTER TABLE `reunion` ADD FOREIGN KEY (`id`) REFERENCES `reunionDocument` (`reunion_id`);

ALTER TABLE `pentestVulnerabilite` ADD FOREIGN KEY (`document_id`) REFERENCES `document` (`vulnerabilite_id`);